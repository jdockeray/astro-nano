---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrev from "@components/BackToPrev.astro";
import Link from "@components/Link.astro";

export async function getStaticPaths() {
  const field_notes = (await getCollection("field_notes"))
    .filter(field_note => !field_note.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return field_notes.map((field_note) => ({
    params: { slug: field_note.slug },
    props: field_note,
  }));
}
type Props = CollectionEntry<"field_notes">;

const field_note = Astro.props;
const { Content } = await field_note.render();
---

<PageLayout title={field_note.data.title} description={field_note.data.description}>
  <Container>
    <div class="animate">
      <BackToPrev href="/field_notes">
        Back to field_notes
      </BackToPrev>
    </div>
    <div class="space-y-1 my-10">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={field_note.data.date} />
        </div>
        &bull;
        <div class="font-base text-sm">
          {readingTime(field_note.body)}
        </div>
      </div>
      <div class="animate text-2xl font-semibold text-black dark:text-white">
        {field_note.data.title}
      </div>
      {(field_note.data.gistURL || field_note.data.repoURL) && (
        <nav class="animate flex gap-1">
          {field_note.data.gistURL && (
            <Link href={field_note.data.gistURL} external>
              demo
            </Link>
          )}
          {field_note.data.gistURL && field_note.data.repoURL && (
            <span>/</span>
          )}
          {field_note.data.repoURL && (
            <Link href={field_note.data.repoURL} external>
              repo
            </Link>
          )}
        </nav>
      )}
    </div>
    <article class="animate">
      <Content />
    </article>
  </Container>
</PageLayout>
